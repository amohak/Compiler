
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '1A57D9F2D5D2AEDE83CC9D1CFFA36172'
    
_lr_action_items = {'DIVIDE':([9,25,26,29,64,65,67,68,69,72,73,74,76,80,81,82,88,90,91,94,98,99,100,102,157,158,159,162,163,189,192,234,235,236,237,238,240,247,249,289,],[-133,-27,-131,-132,-64,-89,-88,-84,-70,-86,-71,-77,-80,-83,-74,-85,-87,171,-78,-81,-82,-75,-26,-90,-69,-77,-26,-72,-68,-73,-134,-67,-66,-65,171,171,-76,-28,-91,-79,]),'RSHIFT_ASSIGN':([9,25,26,29,30,33,74,100,192,247,],[-133,-27,-131,-132,107,-26,107,-26,-134,-28,]),'RSHIFT':([9,25,26,29,64,65,67,68,69,72,73,74,76,80,81,82,88,90,91,92,94,96,98,99,100,102,157,158,159,162,163,189,192,229,230,231,232,234,235,236,237,238,240,242,243,247,249,289,],[-133,-27,-131,-132,-64,-89,-88,-84,-70,-86,-71,-77,-80,-83,-74,-85,-87,-61,-78,-58,-81,184,-82,-75,-26,-90,-69,-77,-26,-72,-68,-73,-134,184,184,184,184,-67,-66,-65,-62,-63,-76,-60,-59,-28,-91,-79,]),'TYPE_CHAR':([93,205,207,257,287,302,],[177,177,177,177,177,177,]),'LESS':([9,25,26,29,64,65,67,68,69,72,73,74,76,79,80,81,82,88,90,91,92,94,96,98,99,100,102,157,158,159,162,163,189,192,229,230,231,232,234,235,236,237,238,240,242,243,244,245,247,249,289,],[-133,-27,-131,-132,-64,-89,-88,-84,-70,-86,-71,-77,-80,166,-83,-74,-85,-87,-61,-78,-58,-81,-53,-82,-75,-26,-90,-69,-77,-26,-72,-68,-73,-134,-56,-54,-55,-57,-67,-66,-65,-62,-63,-76,-60,-59,166,166,-28,-91,-79,]),'MINUS_ASSIGN':([9,25,26,29,30,33,74,100,192,247,],[-133,-27,-131,-132,108,-26,108,-26,-134,-28,]),'KEYWORD_CLASS':([0,2,4,5,6,9,11,12,13,14,15,22,23,24,25,26,29,31,32,34,35,36,41,42,43,44,46,47,52,53,57,58,64,65,66,67,68,69,71,72,73,74,75,76,79,80,81,82,83,85,86,88,89,90,91,92,94,96,97,98,99,100,101,102,105,121,123,128,129,131,132,134,135,142,157,158,159,162,163,169,189,190,192,226,227,228,229,230,231,232,233,234,235,236,237,238,240,242,243,244,245,246,247,249,289,293,303,309,312,313,324,334,335,341,345,348,],[1,1,-4,-2,-3,-133,-1,1,-5,-168,-188,-146,-139,-140,-27,-131,-132,-17,-11,-148,-142,-14,1,-144,-13,-143,-166,-16,-147,-15,-145,-141,-64,-89,-44,-88,-84,-70,-46,-86,-71,-77,-42,-80,-50,-83,-74,-85,-22,-23,-18,-87,-21,-61,-78,-58,-81,-53,-48,-82,-75,-26,-40,-90,-8,-149,-12,-202,-105,-189,-106,-104,-201,-102,-69,-77,-26,-72,-68,-167,-73,-25,-134,-47,-49,-45,-56,-54,-55,-57,-41,-67,-66,-65,-62,-63,-76,-60,-59,-52,-51,-43,-28,-91,-79,-152,-136,-156,-157,-154,-138,-155,-153,-24,-137,-135,]),'EQUAL':([9,25,26,29,64,65,67,68,69,72,73,74,76,79,80,81,82,88,90,91,92,94,96,97,98,99,100,102,157,158,159,162,163,189,192,227,229,230,231,232,234,235,236,237,238,240,242,243,244,245,247,249,289,],[-133,-27,-131,-132,-64,-89,-88,-84,-70,-86,-71,-77,-80,-50,-83,-74,-85,-87,-61,-78,-58,-81,-53,187,-82,-75,-26,-90,-69,-77,-26,-72,-68,-73,-134,187,-56,-54,-55,-57,-67,-66,-65,-62,-63,-76,-60,-59,-52,-51,-28,-91,-79,]),'XOR_ASSIGN':([9,25,26,29,30,33,74,100,192,247,],[-133,-27,-131,-132,117,-26,117,-26,-134,-28,]),'CHAR':([9,26,27,29,50,70,77,78,93,103,106,107,108,109,110,111,112,113,114,115,116,117,118,120,124,136,137,138,141,156,160,161,164,165,166,167,168,170,171,172,173,174,175,176,177,178,180,181,183,184,185,186,187,188,192,206,208,209,210,212,213,239,248,250,258,259,260,261,263,264,267,268,273,278,284,290,295,305,325,328,329,330,331,333,336,339,347,],[-133,-131,68,-132,68,68,68,68,68,68,-30,-36,-34,-29,-32,-38,-35,-37,-31,68,-33,-39,68,68,68,-203,-190,-203,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-121,-124,-123,-126,-125,-122,68,68,68,68,68,68,-134,68,-192,-184,-193,-194,-195,68,68,68,68,-127,-120,-119,-128,-129,-183,-191,68,68,68,68,68,-196,68,-197,68,-163,-162,68,68,-130,68,]),'KEYWORD_BY':([9,25,26,29,64,65,66,67,68,69,71,72,73,74,75,76,79,80,81,82,83,85,86,88,89,90,91,92,94,96,97,98,99,100,101,102,157,158,159,162,163,189,190,192,214,226,227,228,229,230,231,232,233,234,235,236,237,238,240,242,243,244,245,246,247,249,289,340,341,],[-133,-27,-131,-132,-64,-89,-44,-88,-84,-70,-46,-86,-71,-77,-42,-80,-50,-83,-74,-85,-22,-23,-18,-87,-21,-61,-78,-58,-81,-53,-48,-82,-75,-26,-40,-90,-69,-77,-26,-72,-68,-73,-25,-134,273,-47,-49,-45,-56,-54,-55,-57,-41,-67,-66,-65,-62,-63,-76,-60,-59,-52,-51,-43,-28,-91,-79,-161,-24,]),'TYPE_STRING':([93,205,207,257,287,302,],[176,176,176,176,176,176,]),'INST':([9,26,29,33,100,159,192,204,264,],[-133,-131,-132,119,119,119,-134,119,119,]),'LSHIFT':([9,25,26,29,64,65,67,68,69,72,73,74,76,80,81,82,88,90,91,92,94,96,98,99,100,102,157,158,159,162,163,189,192,229,230,231,232,234,235,236,237,238,240,242,243,247,249,289,],[-133,-27,-131,-132,-64,-89,-88,-84,-70,-86,-71,-77,-80,-83,-74,-85,-87,-61,-78,-58,-81,185,-82,-75,-26,-90,-69,-77,-26,-72,-68,-73,-134,185,185,185,185,-67,-66,-65,-62,-63,-76,-60,-59,-28,-91,-79,]),'KEYWORD_NULL':([9,26,27,29,50,70,77,78,93,103,106,107,108,109,110,111,112,113,114,115,116,117,118,120,124,136,137,138,141,156,160,161,164,165,166,167,168,170,171,172,173,174,175,176,177,178,180,181,183,184,185,186,187,188,192,206,208,209,210,212,213,239,248,250,258,259,260,261,263,264,267,268,273,278,284,290,295,305,325,328,329,330,331,333,336,339,347,],[-133,-131,67,-132,67,67,67,67,67,67,-30,-36,-34,-29,-32,-38,-35,-37,-31,67,-33,-39,67,67,67,-203,-190,-203,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-121,-124,-123,-126,-125,-122,67,67,67,67,67,67,-134,67,-192,-184,-193,-194,-195,67,67,67,67,-127,-120,-119,-128,-129,-183,-191,67,67,67,67,67,-196,67,-197,67,-163,-162,67,67,-130,67,]),'AND_BITWISE':([9,25,26,29,64,65,67,68,69,71,72,73,74,76,79,80,81,82,88,90,91,92,94,96,97,98,99,100,102,157,158,159,162,163,189,192,226,227,229,230,231,232,234,235,236,237,238,240,242,243,244,245,247,249,289,],[-133,-27,-131,-132,-64,-89,-88,-84,-70,160,-86,-71,-77,-80,-50,-83,-74,-85,-87,-61,-78,-58,-81,-53,-48,-82,-75,-26,-90,-69,-77,-26,-72,-68,-73,-134,160,-49,-56,-54,-55,-57,-67,-66,-65,-62,-63,-76,-60,-59,-52,-51,-28,-91,-79,]),'MINUS':([9,25,26,27,29,50,64,65,67,68,69,70,72,73,74,76,77,78,80,81,82,88,90,91,92,93,94,98,99,100,102,103,106,107,108,109,110,111,112,113,114,115,116,117,118,120,124,136,137,138,141,156,157,158,159,160,161,162,163,164,165,166,167,168,170,171,172,173,174,175,176,177,178,180,181,183,184,185,186,187,188,189,192,206,208,209,210,212,213,234,235,236,237,238,239,240,242,243,247,248,249,250,258,259,260,261,263,264,267,268,273,278,284,289,290,295,305,325,328,329,330,331,333,336,339,347,],[-133,-27,-131,70,-132,70,-64,-89,-88,-84,-70,70,-86,-71,-77,-80,70,70,-83,-74,-85,-87,-61,-78,174,70,-81,-82,-75,-26,-90,70,-30,-36,-34,-29,-32,-38,-35,-37,-31,70,-33,-39,70,70,70,-203,-190,-203,70,70,-69,-77,-26,70,70,-72,-68,70,70,70,70,70,70,70,70,70,70,-121,-124,-123,-126,-125,-122,70,70,70,70,70,70,-73,-134,70,-192,-184,-193,-194,-195,-67,-66,-65,-62,-63,70,-76,174,174,-28,70,-91,70,70,-127,-120,-119,-128,-129,-183,-191,70,70,70,-79,70,70,-196,70,-197,70,-163,-162,70,70,-130,70,]),'KEYWORD_OBJECT':([0,2,4,5,6,9,11,12,13,14,15,22,23,24,25,26,29,31,32,34,35,36,41,42,43,44,46,47,52,53,57,58,64,65,66,67,68,69,71,72,73,74,75,76,79,80,81,82,83,85,86,88,89,90,91,92,94,96,97,98,99,100,101,102,105,121,123,128,129,131,132,134,135,142,157,158,159,162,163,169,189,190,192,226,227,228,229,230,231,232,233,234,235,236,237,238,240,242,243,244,245,246,247,249,289,293,303,309,312,313,324,334,335,341,345,348,],[8,8,-4,-2,-3,-133,-1,8,-5,-168,-188,-146,-139,-140,-27,-131,-132,-17,-11,-148,-142,-14,8,-144,-13,-143,-166,-16,-147,-15,-145,-141,-64,-89,-44,-88,-84,-70,-46,-86,-71,-77,-42,-80,-50,-83,-74,-85,-22,-23,-18,-87,-21,-61,-78,-58,-81,-53,-48,-82,-75,-26,-40,-90,-8,-149,-12,-202,-105,-189,-106,-104,-201,-102,-69,-77,-26,-72,-68,-167,-73,-25,-134,-47,-49,-45,-56,-54,-55,-57,-41,-67,-66,-65,-62,-63,-76,-60,-59,-52,-51,-43,-28,-91,-79,-152,-136,-156,-157,-154,-138,-155,-153,-24,-137,-135,]),'KEYWORD_RETURN':([9,12,13,14,15,22,23,24,25,26,29,31,32,34,35,36,40,41,42,43,44,46,47,52,53,57,58,64,65,66,67,68,69,71,72,73,74,75,76,79,80,81,82,83,85,86,88,89,90,91,92,94,96,97,98,99,100,101,102,105,121,123,128,129,131,132,134,135,142,157,158,159,162,163,169,189,190,192,226,227,228,229,230,231,232,233,234,235,236,237,238,240,242,243,244,245,246,247,249,251,276,279,280,289,293,303,309,312,313,319,324,334,335,341,345,348,],[-133,27,-5,-168,-188,-146,-139,-140,-27,-131,-132,-17,-11,-148,-142,-14,27,27,-144,-13,-143,-166,-16,-147,-15,-145,-141,-64,-89,-44,-88,-84,-70,-46,-86,-71,-77,-42,-80,-50,-83,-74,-85,-22,-23,-18,-87,-21,-61,-78,-58,-81,-53,-48,-82,-75,-26,-40,-90,-8,-149,-12,-202,-105,-189,-106,-104,-201,-102,-69,-77,-26,-72,-68,-167,-73,-25,-134,-47,-49,-45,-56,-54,-55,-57,-41,-67,-66,-65,-62,-63,-76,-60,-59,-52,-51,-43,-28,-91,27,27,27,27,-79,-152,-136,-156,-157,-154,27,-138,-155,-153,-24,-137,-135,]),'BOOL_CONSTF':([9,26,27,29,50,70,77,78,93,103,106,107,108,109,110,111,112,113,114,115,116,117,118,120,124,136,137,138,141,156,160,161,164,165,166,167,168,170,171,172,173,174,175,176,177,178,180,181,183,184,185,186,187,188,192,206,208,209,210,212,213,239,248,250,258,259,260,261,263,264,267,268,273,278,284,290,295,305,325,328,329,330,331,333,336,339,347,],[-133,-131,88,-132,88,88,88,88,88,88,-30,-36,-34,-29,-32,-38,-35,-37,-31,88,-33,-39,88,88,88,-203,-190,-203,88,88,88,88,88,88,88,88,88,88,88,88,88,88,-121,-124,-123,-126,-125,-122,88,88,88,88,88,88,-134,88,-192,-184,-193,-194,-195,88,88,88,88,-127,-120,-119,-128,-129,-183,-191,88,88,88,88,88,-196,88,-197,88,-163,-162,88,88,-130,88,]),'TIMES_ASSIGN':([9,25,26,29,30,33,74,100,192,247,],[-133,-27,-131,-132,106,-26,106,-26,-134,-28,]),'RPAREN':([9,25,26,29,62,64,65,66,67,68,69,71,72,73,74,75,76,79,80,81,82,83,85,86,88,89,90,91,92,94,96,97,98,99,100,101,102,120,129,132,134,149,150,151,155,157,158,159,162,163,175,176,177,178,179,180,181,182,189,190,192,193,194,195,196,198,206,209,214,215,216,219,223,226,227,228,229,230,231,232,233,234,235,236,237,238,240,241,242,243,244,245,246,247,249,254,255,256,258,259,260,261,263,264,266,267,269,270,271,274,275,282,285,286,289,291,292,296,300,303,306,307,308,310,314,315,316,322,324,325,327,338,339,340,341,342,343,344,345,348,349,],[-133,-27,-131,-132,-203,-64,-89,-44,-88,-84,-70,-46,-86,-71,-77,-42,-80,-50,-83,-74,-85,-22,-23,-18,-87,-21,-61,-78,-58,-81,-53,-48,-82,-75,-26,-40,-90,-203,-105,-106,-104,221,-175,-173,-174,-69,-77,-26,-72,-68,-121,-124,-123,-126,239,-125,-122,240,-73,-25,-134,-92,-93,249,-94,251,-203,-184,-203,276,-158,280,-203,-47,-49,-45,-56,-54,-55,-57,-41,-67,-66,-65,-62,-63,-76,290,-60,-59,-52,-51,-43,-28,-91,-113,-203,297,-203,-127,-120,-119,-128,-129,303,-183,-198,305,-203,-160,-165,-176,-177,-117,-79,-95,318,-115,324,-136,-200,328,-164,-159,332,-116,-118,-114,-138,-203,-199,345,-130,-161,-24,-107,346,348,-137,-135,-108,]),'LEQ':([9,25,26,29,64,65,67,68,69,72,73,74,76,79,80,81,82,88,90,91,92,94,96,98,99,100,102,157,158,159,162,163,189,192,229,230,231,232,234,235,236,237,238,240,242,243,244,245,247,249,289,],[-133,-27,-131,-132,-64,-89,-88,-84,-70,-86,-71,-77,-80,167,-83,-74,-85,-87,-61,-78,-58,-81,-53,-82,-75,-26,-90,-69,-77,-26,-72,-68,-73,-134,-56,-54,-55,-57,-67,-66,-65,-62,-63,-76,-60,-59,167,167,-28,-91,-79,]),'OR_BITWISE':([9,25,26,29,64,65,66,67,68,69,71,72,73,74,75,76,79,80,81,82,88,90,91,92,94,96,97,98,99,100,102,157,158,159,162,163,189,192,226,227,228,229,230,231,232,234,235,236,237,238,240,242,243,244,245,246,247,249,289,],[-133,-27,-131,-132,-64,-89,-44,-88,-84,-70,-46,-86,-71,-77,161,-80,-50,-83,-74,-85,-87,-61,-78,-58,-81,-53,-48,-82,-75,-26,-90,-69,-77,-26,-72,-68,-73,-134,-47,-49,-45,-56,-54,-55,-57,-67,-66,-65,-62,-63,-76,-60,-59,-52,-51,161,-28,-91,-79,]),'RBRAC':([9,25,26,29,64,65,66,67,68,69,71,72,73,74,75,76,79,80,81,82,83,85,86,88,89,90,91,92,94,96,97,98,99,100,101,102,157,158,159,162,163,175,176,177,178,180,181,189,190,191,192,226,227,228,229,230,231,232,233,234,235,236,237,238,240,242,243,244,245,246,247,249,259,260,261,262,263,264,289,299,326,339,341,],[-133,-27,-131,-132,-64,-89,-44,-88,-84,-70,-46,-86,-71,-77,-42,-80,-50,-83,-74,-85,-22,-23,-18,-87,-21,-61,-78,-58,-81,-53,-48,-82,-75,-26,-40,-90,-69,-77,-26,-72,-68,-121,-124,-123,-126,-125,-122,-73,-25,247,-134,-47,-49,-45,-56,-54,-55,-57,-41,-67,-66,-65,-62,-63,-76,-60,-59,-52,-51,-43,-28,-91,-127,-120,-119,301,-128,-129,-79,323,339,-130,-24,]),'TYPE_VOID':([93,205,207,257,287,302,],[178,178,178,178,178,178,]),'TYPE_INT':([93,205,207,257,287,302,],[175,175,175,175,175,175,]),'BOOL_CONSTT':([9,26,27,29,50,70,77,78,93,103,106,107,108,109,110,111,112,113,114,115,116,117,118,120,124,136,137,138,141,156,160,161,164,165,166,167,168,170,171,172,173,174,175,176,177,178,180,181,183,184,185,186,187,188,192,206,208,209,210,212,213,239,248,250,258,259,260,261,263,264,267,268,273,278,284,290,295,305,325,328,329,330,331,333,336,339,347,],[-133,-131,72,-132,72,72,72,72,72,72,-30,-36,-34,-29,-32,-38,-35,-37,-31,72,-33,-39,72,72,72,-203,-190,-203,72,72,72,72,72,72,72,72,72,72,72,72,72,72,-121,-124,-123,-126,-125,-122,72,72,72,72,72,72,-134,72,-192,-184,-193,-194,-195,72,72,72,72,-127,-120,-119,-128,-129,-183,-191,72,72,72,72,72,-196,72,-197,72,-163,-162,72,72,-130,72,]),'COLON':([9,136,138,200,202,210,212,213,224,255,294,305,328,],[-133,207,-203,207,-111,-193,-194,-195,287,207,-110,-196,-197,]),'PLUS_ASSIGN':([9,25,26,29,30,33,74,100,192,247,],[-133,-27,-131,-132,116,-26,116,-26,-134,-28,]),'LBRAC':([9,26,29,33,100,133,159,192,203,265,],[-133,-131,-132,118,118,205,118,-134,257,302,]),'PLUS':([9,25,26,27,29,50,64,65,67,68,69,70,72,73,74,76,77,78,80,81,82,88,90,91,92,93,94,98,99,100,102,103,106,107,108,109,110,111,112,113,114,115,116,117,118,120,124,136,137,138,141,156,157,158,159,160,161,162,163,164,165,166,167,168,170,171,172,173,174,175,176,177,178,180,181,183,184,185,186,187,188,189,192,206,208,209,210,212,213,234,235,236,237,238,239,240,242,243,247,248,249,250,258,259,260,261,263,264,267,268,273,278,284,289,290,295,305,325,328,329,330,331,333,336,339,347,],[-133,-27,-131,78,-132,78,-64,-89,-88,-84,-70,78,-86,-71,-77,-80,78,78,-83,-74,-85,-87,-61,-78,173,78,-81,-82,-75,-26,-90,78,-30,-36,-34,-29,-32,-38,-35,-37,-31,78,-33,-39,78,78,78,-203,-190,-203,78,78,-69,-77,-26,78,78,-72,-68,78,78,78,78,78,78,78,78,78,78,-121,-124,-123,-126,-125,-122,78,78,78,78,78,78,-73,-134,78,-192,-184,-193,-194,-195,-67,-66,-65,-62,-63,78,-76,173,173,-28,78,-91,78,78,-127,-120,-119,-128,-129,-183,-191,78,78,78,-79,78,78,-196,78,-197,78,-163,-162,78,78,-130,78,]),'STRING':([9,26,27,29,50,70,77,78,93,103,106,107,108,109,110,111,112,113,114,115,116,117,118,120,124,136,137,138,141,156,160,161,164,165,166,167,168,170,171,172,173,174,175,176,177,178,180,181,183,184,185,186,187,188,192,206,208,209,210,212,213,239,248,250,258,259,260,261,263,264,267,268,273,278,284,290,295,305,325,328,329,330,331,333,336,339,347,],[-133,-131,82,-132,82,82,82,82,82,82,-30,-36,-34,-29,-32,-38,-35,-37,-31,82,-33,-39,82,82,82,-203,-190,-203,82,82,82,82,82,82,82,82,82,82,82,82,82,82,-121,-124,-123,-126,-125,-122,82,82,82,82,82,82,-134,82,-192,-184,-193,-194,-195,82,82,82,82,-127,-120,-119,-128,-129,-183,-191,82,82,82,82,82,-196,82,-197,82,-163,-162,82,82,-130,82,]),'IDENTIFIER':([1,8,9,12,13,14,15,22,23,24,25,26,27,29,31,32,34,35,36,40,41,42,43,44,46,47,50,51,52,53,57,58,59,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,88,89,90,91,92,93,94,96,97,98,99,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,126,127,128,129,130,131,132,134,135,136,137,138,139,140,141,142,146,152,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,180,181,183,184,185,186,187,188,189,190,192,201,205,206,207,208,209,210,211,212,213,222,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,242,243,244,245,246,247,248,249,250,251,252,257,258,259,260,261,263,264,267,268,272,273,276,277,278,279,280,281,283,284,287,288,289,290,293,295,298,302,303,304,305,309,312,313,319,324,325,328,329,330,331,333,334,335,336,339,341,345,347,348,],[9,16,-133,9,-5,-168,-188,-146,-139,-140,-27,-131,9,-132,-17,-11,-148,-142,-14,9,9,-144,-13,-143,-166,-16,9,9,-147,-15,-145,-141,143,-203,-64,-89,-44,-88,-84,-70,9,-46,-86,-71,-77,-42,-80,9,9,-50,-83,-74,-85,-22,-23,-18,-87,-21,-61,-78,-58,9,-81,-53,-48,-82,-75,-26,-40,-90,9,-8,-30,-36,-34,-29,-32,-38,-35,-37,-31,9,-33,-39,9,9,9,-149,-12,9,-101,202,-100,-202,-105,9,-189,-106,-104,-201,-203,-190,-203,217,217,9,-102,9,224,-182,9,-69,-77,-26,9,9,-72,-68,9,9,9,9,9,-167,9,9,9,9,9,-121,-124,-123,-126,-125,-122,9,9,9,9,9,9,-73,-25,-134,255,9,9,9,-192,-184,-193,224,-194,-195,-203,-47,-49,-45,-56,-54,-55,-57,-41,-67,-66,-65,-62,-63,9,-76,-60,-59,-52,-51,-43,-28,9,-91,9,9,294,9,9,-127,-120,-119,-128,-129,-183,-191,224,9,9,217,9,9,9,255,-182,9,9,-181,-79,9,-152,9,255,9,-136,224,-196,-156,-157,-154,9,-138,9,-197,9,-163,-162,9,-155,-153,9,-130,-24,-137,9,-135,]),'KEYWORD_NEW':([9,26,29,50,136,137,138,175,176,177,178,180,181,192,208,209,210,212,213,259,260,261,263,264,267,268,284,295,305,328,336,339,347,],[-133,-131,-132,130,-203,-190,-203,-121,-124,-123,-126,-125,-122,-134,-192,-184,-193,-194,-195,-127,-120,-119,-128,-129,-183,-191,130,130,-196,-197,130,-130,130,]),'KEYWORD_WHILE':([9,12,13,14,15,22,23,24,25,26,29,31,32,34,35,36,40,41,42,43,44,46,47,52,53,57,58,64,65,66,67,68,69,71,72,73,74,75,76,79,80,81,82,83,85,86,88,89,90,91,92,94,96,97,98,99,100,101,102,105,121,122,123,128,129,131,132,134,135,142,157,158,159,162,163,169,189,190,192,226,227,228,229,230,231,232,233,234,235,236,237,238,240,242,243,244,245,246,247,249,251,276,279,280,289,293,303,309,312,313,319,324,334,335,341,345,348,],[-133,55,-5,-168,-188,-146,-139,-140,-27,-131,-132,-17,-11,-148,-142,-14,55,55,-144,-13,-143,-166,-16,-147,-15,-145,-141,-64,-89,-44,-88,-84,-70,-46,-86,-71,-77,-42,-80,-50,-83,-74,-85,-22,-23,-18,-87,-21,-61,-78,-58,-81,-53,-48,-82,-75,-26,-40,-90,-8,-149,197,-12,-202,-105,-189,-106,-104,-201,-102,-69,-77,-26,-72,-68,-167,-73,-25,-134,-47,-49,-45,-56,-54,-55,-57,-41,-67,-66,-65,-62,-63,-76,-60,-59,-52,-51,-43,-28,-91,55,55,55,55,-79,-152,-136,-156,-157,-154,55,-138,-155,-153,-24,-137,-135,]),'$end':([2,4,5,6,11,13,14,15,105,],[0,-4,-2,-3,-1,-5,-168,-188,-8,]),'TYPE_DOUBLE':([93,205,207,257,287,302,],[181,181,181,181,181,181,]),'KEYWORD_ELSE':([9,22,23,24,25,26,29,34,35,42,44,46,52,57,58,64,65,66,67,68,69,71,72,73,74,75,76,79,80,81,82,83,85,86,88,89,90,91,92,94,96,97,98,99,100,101,102,105,121,157,158,159,162,163,169,189,190,192,226,227,228,229,230,231,232,233,234,235,236,237,238,240,242,243,244,245,246,247,249,289,293,309,312,313,317,334,335,341,],[-133,-146,-139,-140,-27,-131,-132,-148,-142,-144,-143,-166,-147,-145,-141,-64,-89,-44,-88,-84,-70,-46,-86,-71,-77,-42,-80,-50,-83,-74,-85,-22,-23,-18,-87,-21,-61,-78,-58,-81,-53,-48,-82,-75,-26,-40,-90,-8,-149,-69,-77,-26,-72,-68,-167,-73,-25,-134,-47,-49,-45,-56,-54,-55,-57,-41,-67,-66,-65,-62,-63,-76,-60,-59,-52,-51,-43,-28,-91,-79,319,-156,-157,-154,333,-155,-153,-24,]),'XOR':([9,25,26,29,64,65,66,67,68,69,71,72,73,74,76,79,80,81,82,88,90,91,92,94,96,97,98,99,100,102,157,158,159,162,163,189,192,226,227,228,229,230,231,232,234,235,236,237,238,240,242,243,244,245,247,249,289,],[-133,-27,-131,-132,-64,-89,156,-88,-84,-70,-46,-86,-71,-77,-80,-50,-83,-74,-85,-87,-61,-78,-58,-81,-53,-48,-82,-75,-26,-90,-69,-77,-26,-72,-68,-73,-134,-47,-49,156,-56,-54,-55,-57,-67,-66,-65,-62,-63,-76,-60,-59,-52,-51,-28,-91,-79,]),'KEYWORD_TO':([9,25,26,29,64,65,66,67,68,69,71,72,73,74,75,76,79,80,81,82,83,85,86,88,89,90,91,92,94,96,97,98,99,100,101,102,157,158,159,162,163,189,190,192,226,227,228,229,230,231,232,233,234,235,236,237,238,240,242,243,244,245,246,247,249,289,311,341,],[-133,-27,-131,-132,-64,-89,-44,-88,-84,-70,-46,-86,-71,-77,-42,-80,-50,-83,-74,-85,-22,-23,-18,-87,-21,-61,-78,-58,-81,-53,-48,-82,-75,-26,-40,-90,-69,-77,-26,-72,-68,-73,-25,-134,-47,-49,-45,-56,-54,-55,-57,-41,-67,-66,-65,-62,-63,-76,-60,-59,-52,-51,-43,-28,-91,-79,330,-24,]),'AND_ASSIGN':([9,25,26,29,30,33,74,100,192,247,],[-133,-27,-131,-132,113,-26,113,-26,-134,-28,]),'INT_NUMBER':([9,26,27,29,50,70,77,78,93,103,106,107,108,109,110,111,112,113,114,115,116,117,118,120,124,136,137,138,141,156,160,161,164,165,166,167,168,170,171,172,173,174,175,176,177,178,180,181,183,184,185,186,187,188,192,206,208,209,210,212,213,239,248,250,258,259,260,261,263,264,267,268,273,278,284,290,295,305,325,328,329,330,331,333,336,337,339,347,],[-133,-131,102,-132,102,102,102,102,102,102,-30,-36,-34,-29,-32,-38,-35,-37,-31,102,-33,-39,102,102,102,-203,-190,-203,102,102,102,102,102,102,102,102,102,102,102,102,102,102,-121,-124,-123,-126,-125,-122,102,102,102,102,102,102,-134,102,-192,-184,-193,-194,-195,102,102,102,102,-127,-120,-119,-128,-129,-183,-191,102,102,102,102,102,-196,102,-197,102,-163,-162,102,102,344,-130,102,]),'KEYWORD_VAR':([9,12,13,14,15,17,18,19,21,22,23,24,25,26,29,31,32,34,35,36,39,41,42,43,44,46,47,49,52,53,57,58,62,64,65,66,67,68,69,71,72,73,74,75,76,79,80,81,82,83,85,86,88,89,90,91,92,94,96,97,98,99,100,101,102,105,121,123,128,129,131,132,134,135,142,148,153,154,155,157,158,159,162,163,169,189,190,192,222,225,226,227,228,229,230,231,232,233,234,235,236,237,238,240,242,243,244,245,246,247,249,283,289,293,303,309,312,313,324,334,335,341,345,348,],[-133,-203,-5,-168,-188,-96,-97,-98,-99,-146,-139,-140,-27,-131,-132,-17,-11,-148,-142,-14,-99,-203,-144,-13,-143,-166,-16,127,-147,-15,-145,-141,-203,-64,-89,-44,-88,-84,-70,-46,-86,-71,-77,-42,-80,-50,-83,-74,-85,-22,-23,-18,-87,-21,-61,-78,-58,-81,-53,-48,-82,-75,-26,-40,-90,-8,-149,-12,-202,-105,-189,-106,-104,-201,-102,-180,-178,-203,-179,-69,-77,-26,-72,-68,-167,-73,-25,-134,-203,127,-47,-49,-45,-56,-54,-55,-57,-41,-67,-66,-65,-62,-63,-76,-60,-59,-52,-51,-43,-28,-91,-179,-79,-152,-136,-156,-157,-154,-138,-155,-153,-24,-137,-135,]),'GEQ':([9,25,26,29,64,65,67,68,69,72,73,74,76,79,80,81,82,88,90,91,92,94,96,98,99,100,102,157,158,159,162,163,189,192,229,230,231,232,234,235,236,237,238,240,242,243,244,245,247,249,289,],[-133,-27,-131,-132,-64,-89,-88,-84,-70,-86,-71,-77,-80,164,-83,-74,-85,-87,-61,-78,-58,-81,-53,-82,-75,-26,-90,-69,-77,-26,-72,-68,-73,-134,-56,-54,-55,-57,-67,-66,-65,-62,-63,-76,-60,-59,164,164,-28,-91,-79,]),'TIMES':([9,25,26,29,64,65,67,68,69,72,73,74,76,80,81,82,88,90,91,94,98,99,100,102,157,158,159,162,163,189,192,234,235,236,237,238,240,247,249,289,],[-133,-27,-131,-132,-64,-89,-88,-84,-70,-86,-71,-77,-80,-83,-74,-85,-87,172,-78,-81,-82,-75,-26,-90,-69,-77,-26,-72,-68,-73,-134,-67,-66,-65,172,172,-76,-28,-91,-79,]),'BLOCKEND':([9,12,13,14,15,22,23,24,25,26,28,29,31,32,34,35,36,39,41,42,43,44,46,47,52,53,57,58,64,65,66,67,68,69,71,72,73,74,75,76,79,80,81,82,83,85,86,88,89,90,91,92,94,96,97,98,99,100,101,102,105,121,123,128,129,131,132,134,135,142,157,158,159,162,163,169,189,190,192,214,216,218,226,227,228,229,230,231,232,233,234,235,236,237,238,240,242,243,244,245,246,247,249,274,275,289,293,303,308,309,310,312,313,324,334,335,340,341,345,348,],[-133,-203,-5,-168,-188,-146,-139,-140,-27,-131,105,-132,-17,-11,-148,-142,-14,-10,-9,-144,-13,-143,-166,-16,-147,-15,-145,-141,-64,-89,-44,-88,-84,-70,-46,-86,-71,-77,-42,-80,-50,-83,-74,-85,-22,-23,-18,-87,-21,-61,-78,-58,-81,-53,-48,-82,-75,-26,-40,-90,-8,-149,-12,-202,-105,-189,-106,-104,-201,-102,-69,-77,-26,-72,-68,-167,-73,-25,-134,-203,-158,279,-47,-49,-45,-56,-54,-55,-57,-41,-67,-66,-65,-62,-63,-76,-60,-59,-52,-51,-43,-28,-91,-160,-165,-79,-152,-136,-164,-156,-159,-157,-154,-138,-155,-153,-161,-24,-137,-135,]),'KEYWORD_DEF':([9,12,13,14,15,22,23,24,25,26,29,31,32,34,35,36,41,42,43,44,46,47,52,53,57,58,64,65,66,67,68,69,71,72,73,74,75,76,79,80,81,82,83,85,86,88,89,90,91,92,94,96,97,98,99,100,101,102,105,121,123,128,129,131,132,134,135,142,157,158,159,162,163,169,189,190,192,226,227,228,229,230,231,232,233,234,235,236,237,238,240,242,243,244,245,246,247,249,289,293,303,309,312,313,324,334,335,341,345,348,],[-133,51,-5,-168,-188,-146,-139,-140,-27,-131,-132,-17,-11,-148,-142,-14,51,-144,-13,-143,-166,-16,-147,-15,-145,-141,-64,-89,-44,-88,-84,-70,-46,-86,-71,-77,-42,-80,-50,-83,-74,-85,-22,-23,-18,-87,-21,-61,-78,-58,-81,-53,-48,-82,-75,-26,-40,-90,-8,-149,-12,-202,-105,-189,-106,-104,-201,-102,-69,-77,-26,-72,-68,-167,-73,-25,-134,-47,-49,-45,-56,-54,-55,-57,-41,-67,-66,-65,-62,-63,-76,-60,-59,-52,-51,-43,-28,-91,-79,-152,-136,-156,-157,-154,-138,-155,-153,-24,-137,-135,]),'TYPE_BOOLEAN':([93,205,207,257,287,302,],[180,180,180,180,180,180,]),'DIVIDE_ASSIGN':([9,25,26,29,30,33,74,100,192,247,],[-133,-27,-131,-132,114,-26,114,-26,-134,-28,]),'TERMINATOR':([9,12,13,14,15,22,23,24,25,26,27,29,31,32,34,35,36,37,38,40,41,42,43,44,45,46,47,52,53,56,57,58,64,65,66,67,68,69,71,72,73,74,75,76,79,80,81,82,83,84,85,86,87,88,89,90,91,92,94,96,97,98,99,100,101,102,104,105,121,123,128,129,131,132,134,135,142,157,158,159,162,163,169,189,190,192,199,214,216,226,227,228,229,230,231,232,233,234,235,236,237,238,240,242,243,244,245,246,247,249,251,274,275,276,279,280,289,293,303,308,309,312,313,318,319,320,324,334,335,340,341,345,346,348,],[-133,46,-5,-168,-188,-146,-139,-140,-27,-131,-203,-132,-17,-11,-148,-142,-14,121,-151,46,46,-144,-13,-143,-150,-166,-16,-147,-15,142,-145,-141,-64,-89,-44,-88,-84,-70,-46,-86,-71,-77,-42,-80,-50,-83,-74,-85,-22,-20,-23,-18,169,-87,-21,-61,-78,-58,-81,-53,-48,-82,-75,-26,-40,-90,-19,-8,-149,-12,-202,-105,-189,-106,-104,-201,-102,-69,-77,-26,-72,-68,-167,-73,-25,-134,-103,-203,277,-47,-49,-45,-56,-54,-55,-57,-41,-67,-66,-65,-62,-63,-76,-60,-59,-52,-51,-43,-28,-91,46,-160,-165,46,46,46,-79,-152,-136,-164,-156,-157,-154,334,46,-109,-138,-155,-153,-161,-24,-137,-112,-135,]),'LPAREN':([9,10,17,18,19,20,21,26,27,29,33,48,50,54,55,70,77,78,93,95,100,103,106,107,108,109,110,111,112,113,114,115,116,117,118,120,124,125,126,127,133,136,137,138,141,156,159,160,161,164,165,166,167,168,170,171,172,173,174,175,176,177,178,180,181,183,184,185,186,187,188,192,197,204,206,208,209,210,212,213,220,239,248,250,258,259,260,261,263,264,267,268,273,278,284,290,295,301,305,321,323,325,328,329,330,331,333,336,339,347,],[-133,-203,-96,-97,-98,62,-99,-131,93,-132,120,124,93,139,141,93,93,93,93,183,120,93,-30,-36,-34,-29,-32,-38,-35,-37,-31,93,-33,-39,93,93,93,-101,201,-100,206,-203,-190,211,93,93,120,93,93,93,93,93,93,93,93,93,93,93,93,-121,-124,-123,-126,-125,-122,93,93,93,93,93,93,-134,250,258,93,-192,-184,-193,272,-195,281,93,93,93,93,-127,-120,-119,-128,-129,-183,-191,93,93,93,93,93,325,-196,336,337,93,-197,93,-163,-162,93,93,-130,93,]),'KEYWORD_OVERRIDE':([62,222,],[148,148,]),'KEYWORD_PRIVATE':([9,10,12,13,14,15,22,23,24,25,26,29,31,32,34,35,36,41,42,43,44,46,47,52,53,57,58,62,64,65,66,67,68,69,71,72,73,74,75,76,79,80,81,82,83,85,86,88,89,90,91,92,94,96,97,98,99,100,101,102,105,121,123,128,129,131,132,134,135,142,148,153,154,155,157,158,159,162,163,169,189,190,192,222,226,227,228,229,230,231,232,233,234,235,236,237,238,240,242,243,244,245,246,247,249,283,289,293,303,309,312,313,324,334,335,341,345,348,],[-133,18,18,-5,-168,-188,-146,-139,-140,-27,-131,-132,-17,-11,-148,-142,-14,18,-144,-13,-143,-166,-16,-147,-15,-145,-141,-203,-64,-89,-44,-88,-84,-70,-46,-86,-71,-77,-42,-80,-50,-83,-74,-85,-22,-23,-18,-87,-21,-61,-78,-58,-81,-53,-48,-82,-75,-26,-40,-90,-8,-149,-12,-202,-105,-189,-106,-104,-201,-102,-180,-178,18,-179,-69,-77,-26,-72,-68,-167,-73,-25,-134,-203,-47,-49,-45,-56,-54,-55,-57,-41,-67,-66,-65,-62,-63,-76,-60,-59,-52,-51,-43,-28,-91,-179,-79,-152,-136,-156,-157,-154,-138,-155,-153,-24,-137,-135,]),'KEYWORD_IF':([9,12,13,14,15,22,23,24,25,26,27,29,31,32,34,35,36,40,41,42,43,44,46,47,50,52,53,57,58,64,65,66,67,68,69,71,72,73,74,75,76,79,80,81,82,83,85,86,88,89,90,91,92,93,94,96,97,98,99,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,123,124,128,129,131,132,134,135,136,137,138,141,142,157,158,159,162,163,169,175,176,177,178,180,181,183,189,190,192,206,208,209,210,212,213,226,227,228,229,230,231,232,233,234,235,236,237,238,240,242,243,244,245,246,247,248,249,250,251,258,259,260,261,263,264,267,268,273,276,278,279,280,284,289,290,293,295,303,305,309,312,313,319,324,325,328,329,330,331,333,334,335,336,339,341,345,347,348,],[-133,48,-5,-168,-188,-146,-139,-140,-27,-131,95,-132,-17,-11,-148,-142,-14,48,48,-144,-13,-143,-166,-16,95,-147,-15,-145,-141,-64,-89,-44,-88,-84,-70,-46,-86,-71,-77,-42,-80,-50,-83,-74,-85,-22,-23,-18,-87,-21,-61,-78,-58,95,-81,-53,-48,-82,-75,-26,-40,-90,-8,-30,-36,-34,-29,-32,-38,-35,-37,-31,95,-33,-39,95,95,-149,-12,95,-202,-105,-189,-106,-104,-201,-203,-190,-203,95,-102,-69,-77,-26,-72,-68,-167,-121,-124,-123,-126,-125,-122,95,-73,-25,-134,95,-192,-184,-193,-194,-195,-47,-49,-45,-56,-54,-55,-57,-41,-67,-66,-65,-62,-63,-76,-60,-59,-52,-51,-43,-28,95,-91,95,48,95,-127,-120,-119,-128,-129,-183,-191,95,48,95,48,48,95,-79,95,-152,95,-136,-196,-156,-157,-154,48,-138,95,-197,95,-163,-162,95,-155,-153,95,-130,-24,-137,95,-135,]),'DOUBLE_NUMBER':([9,26,27,29,50,70,77,78,93,103,106,107,108,109,110,111,112,113,114,115,116,117,118,120,124,136,137,138,141,156,160,161,164,165,166,167,168,170,171,172,173,174,175,176,177,178,180,181,183,184,185,186,187,188,192,206,208,209,210,212,213,239,248,250,258,259,260,261,263,264,267,268,273,278,284,290,295,305,325,328,329,330,331,333,336,339,347,],[-133,-131,65,-132,65,65,65,65,65,65,-30,-36,-34,-29,-32,-38,-35,-37,-31,65,-33,-39,65,65,65,-203,-190,-203,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-121,-124,-123,-126,-125,-122,65,65,65,65,65,65,-134,65,-192,-184,-193,-194,-195,65,65,65,65,-127,-120,-119,-128,-129,-183,-191,65,65,65,65,65,-196,65,-197,65,-163,-162,65,65,-130,65,]),'KEYWORD_PROTECTED':([9,10,12,13,14,15,22,23,24,25,26,29,31,32,34,35,36,41,42,43,44,46,47,52,53,57,58,62,64,65,66,67,68,69,71,72,73,74,75,76,79,80,81,82,83,85,86,88,89,90,91,92,94,96,97,98,99,100,101,102,105,121,123,128,129,131,132,134,135,142,148,153,154,155,157,158,159,162,163,169,189,190,192,222,226,227,228,229,230,231,232,233,234,235,236,237,238,240,242,243,244,245,246,247,249,283,289,293,303,309,312,313,324,334,335,341,345,348,],[-133,17,17,-5,-168,-188,-146,-139,-140,-27,-131,-132,-17,-11,-148,-142,-14,17,-144,-13,-143,-166,-16,-147,-15,-145,-141,-203,-64,-89,-44,-88,-84,-70,-46,-86,-71,-77,-42,-80,-50,-83,-74,-85,-22,-23,-18,-87,-21,-61,-78,-58,-81,-53,-48,-82,-75,-26,-40,-90,-8,-149,-12,-202,-105,-189,-106,-104,-201,-102,-180,-178,17,-179,-69,-77,-26,-72,-68,-167,-73,-25,-134,-203,-47,-49,-45,-56,-54,-55,-57,-41,-67,-66,-65,-62,-63,-76,-60,-59,-52,-51,-43,-28,-91,-179,-79,-152,-136,-156,-157,-154,-138,-155,-153,-24,-137,-135,]),'AND':([9,25,26,29,64,65,66,67,68,69,71,72,73,74,75,76,79,80,81,82,88,90,91,92,94,96,97,98,99,100,101,102,157,158,159,162,163,189,192,226,227,228,229,230,231,232,233,234,235,236,237,238,240,242,243,244,245,246,247,249,289,],[-133,-27,-131,-132,-64,-89,-44,-88,-84,-70,-46,-86,-71,-77,-42,-80,-50,-83,-74,-85,-87,-61,-78,-58,-81,-53,-48,-82,-75,-26,188,-90,-69,-77,-26,-72,-68,-73,-134,-47,-49,-45,-56,-54,-55,-57,188,-67,-66,-65,-62,-63,-76,-60,-59,-52,-51,-43,-28,-91,-79,]),'NEQUAL':([9,25,26,29,64,65,67,68,69,72,73,74,76,79,80,81,82,88,90,91,92,94,96,97,98,99,100,102,157,158,159,162,163,189,192,227,229,230,231,232,234,235,236,237,238,240,242,243,244,245,247,249,289,],[-133,-27,-131,-132,-64,-89,-88,-84,-70,-86,-71,-77,-80,-50,-83,-74,-85,-87,-61,-78,-58,-81,-53,186,-82,-75,-26,-90,-69,-77,-26,-72,-68,-73,-134,186,-56,-54,-55,-57,-67,-66,-65,-62,-63,-76,-60,-59,-52,-51,-28,-91,-79,]),'GREATER':([9,25,26,29,64,65,67,68,69,72,73,74,76,79,80,81,82,88,90,91,92,94,96,98,99,100,102,157,158,159,162,163,189,192,229,230,231,232,234,235,236,237,238,240,242,243,244,245,247,249,289,],[-133,-27,-131,-132,-64,-89,-88,-84,-70,-86,-71,-77,-80,165,-83,-74,-85,-87,-61,-78,-58,-81,-53,-82,-75,-26,-90,-69,-77,-26,-72,-68,-73,-134,-56,-54,-55,-57,-67,-66,-65,-62,-63,-76,-60,-59,165,165,-28,-91,-79,]),'LSHIFT_ASSIGN':([9,25,26,29,30,33,74,100,192,247,],[-133,-27,-131,-132,112,-26,112,-26,-134,-28,]),'REMAINDER_ASSIGN':([9,25,26,29,30,33,74,100,192,247,],[-133,-27,-131,-132,110,-26,110,-26,-134,-28,]),'OR_ASSIGN':([9,25,26,29,30,33,74,100,192,247,],[-133,-27,-131,-132,111,-26,111,-26,-134,-28,]),'KEYWORD_VAL':([9,12,13,14,15,17,18,19,21,22,23,24,25,26,29,31,32,34,35,36,39,41,42,43,44,46,47,49,52,53,57,58,62,64,65,66,67,68,69,71,72,73,74,75,76,79,80,81,82,83,85,86,88,89,90,91,92,94,96,97,98,99,100,101,102,105,121,123,128,129,131,132,134,135,142,148,153,154,155,157,158,159,162,163,169,189,190,192,222,225,226,227,228,229,230,231,232,233,234,235,236,237,238,240,242,243,244,245,246,247,249,283,289,293,303,309,312,313,324,334,335,341,345,348,],[-133,-203,-5,-168,-188,-96,-97,-98,-99,-146,-139,-140,-27,-131,-132,-17,-11,-148,-142,-14,-99,-203,-144,-13,-143,-166,-16,125,-147,-15,-145,-141,-203,-64,-89,-44,-88,-84,-70,-46,-86,-71,-77,-42,-80,-50,-83,-74,-85,-22,-23,-18,-87,-21,-61,-78,-58,-81,-53,-48,-82,-75,-26,-40,-90,-8,-149,-12,-202,-105,-189,-106,-104,-201,-102,-180,-178,-203,-179,-69,-77,-26,-72,-68,-167,-73,-25,-134,-203,125,-47,-49,-45,-56,-54,-55,-57,-41,-67,-66,-65,-62,-63,-76,-60,-59,-52,-51,-43,-28,-91,-179,-79,-152,-136,-156,-157,-154,-138,-155,-153,-24,-137,-135,]),'KEYWORD_ARRAY':([9,26,29,50,130,136,137,138,175,176,177,178,180,181,192,205,207,208,209,210,212,213,257,259,260,261,263,264,267,268,284,287,295,302,305,328,336,339,347,],[-133,-131,-132,133,203,-203,-190,-203,-121,-124,-123,-126,-125,-122,-134,265,265,-192,-184,-193,-194,-195,265,-127,-120,-119,-128,-129,-183,-191,133,265,133,265,-196,-197,133,-130,133,]),'KEYWORD_EXTENDS':([9,10,16,17,18,19,20,21,60,61,63,221,],[-133,-203,59,-96,-97,-98,-203,-99,-170,146,-171,-172,]),'KEYWORD_UNTIL':([9,25,26,29,64,65,66,67,68,69,71,72,73,74,75,76,79,80,81,82,83,85,86,88,89,90,91,92,94,96,97,98,99,100,101,102,157,158,159,162,163,189,190,192,226,227,228,229,230,231,232,233,234,235,236,237,238,240,242,243,244,245,246,247,249,289,311,341,],[-133,-27,-131,-132,-64,-89,-44,-88,-84,-70,-46,-86,-71,-77,-42,-80,-50,-83,-74,-85,-22,-23,-18,-87,-21,-61,-78,-58,-81,-53,-48,-82,-75,-26,-40,-90,-69,-77,-26,-72,-68,-73,-25,-134,-47,-49,-45,-56,-54,-55,-57,-41,-67,-66,-65,-62,-63,-76,-60,-59,-52,-51,-43,-28,-91,-79,331,-24,]),'KEYWORD_FOR':([9,12,13,14,15,22,23,24,25,26,29,31,32,34,35,36,40,41,42,43,44,46,47,52,53,57,58,64,65,66,67,68,69,71,72,73,74,75,76,79,80,81,82,83,85,86,88,89,90,91,92,94,96,97,98,99,100,101,102,105,121,123,128,129,131,132,134,135,142,157,158,159,162,163,169,189,190,192,226,227,228,229,230,231,232,233,234,235,236,237,238,240,242,243,244,245,246,247,249,251,276,279,280,289,293,303,309,312,313,319,324,334,335,341,345,348,],[-133,54,-5,-168,-188,-146,-139,-140,-27,-131,-132,-17,-11,-148,-142,-14,54,54,-144,-13,-143,-166,-16,-147,-15,-145,-141,-64,-89,-44,-88,-84,-70,-46,-86,-71,-77,-42,-80,-50,-83,-74,-85,-22,-23,-18,-87,-21,-61,-78,-58,-81,-53,-48,-82,-75,-26,-40,-90,-8,-149,-12,-202,-105,-189,-106,-104,-201,-102,-69,-77,-26,-72,-68,-167,-73,-25,-134,-47,-49,-45,-56,-54,-55,-57,-41,-67,-66,-65,-62,-63,-76,-60,-59,-52,-51,-43,-28,-91,54,54,54,54,-79,-152,-136,-156,-157,-154,54,-138,-155,-153,-24,-137,-135,]),'TILDA':([9,26,27,29,50,70,77,78,93,103,106,107,108,109,110,111,112,113,114,115,116,117,118,120,124,136,137,138,141,156,160,161,164,165,166,167,168,170,171,172,173,174,175,176,177,178,180,181,183,184,185,186,187,188,192,206,208,209,210,212,213,239,248,250,258,259,260,261,263,264,267,268,273,278,284,290,295,305,325,328,329,330,331,333,336,339,347,],[-133,-131,77,-132,77,77,77,77,77,77,-30,-36,-34,-29,-32,-38,-35,-37,-31,77,-33,-39,77,77,77,-203,-190,-203,77,77,77,77,77,77,77,77,77,77,77,77,77,77,-121,-124,-123,-126,-125,-122,77,77,77,77,77,77,-134,77,-192,-184,-193,-194,-195,77,77,77,77,-127,-120,-119,-128,-129,-183,-191,77,77,77,77,77,-196,77,-197,77,-163,-162,77,77,-130,77,]),'BLOCKBEGIN':([3,7,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,31,32,34,35,36,40,41,42,43,44,46,47,50,52,53,54,57,58,60,61,63,64,65,66,67,68,69,71,72,73,74,75,76,79,80,81,82,83,85,86,88,89,90,91,92,94,96,97,98,99,100,101,102,105,121,123,128,129,131,132,134,135,136,137,138,142,143,144,145,147,157,158,159,162,163,169,175,176,177,178,180,181,189,190,192,208,209,210,212,213,221,226,227,228,229,230,231,232,233,234,235,236,237,238,240,242,243,244,245,246,247,249,251,259,260,261,263,264,267,268,276,279,280,289,293,303,305,309,312,313,319,324,328,332,334,335,339,341,345,348,],[12,12,-133,-203,12,-5,-168,-188,-6,-96,-97,-98,-203,-99,-146,-139,-140,-27,-131,-132,-17,-11,-148,-142,-14,12,12,-144,-13,-143,-166,-16,12,-147,-15,140,-145,-141,-170,-203,-171,-64,-89,-44,-88,-84,-70,-46,-86,-71,-77,-42,-80,-50,-83,-74,-85,-22,-23,-18,-87,-21,-61,-78,-58,-81,-53,-48,-82,-75,-26,-40,-90,-8,-149,-12,-202,-105,-189,-106,-104,-201,-203,-190,-203,-102,-7,-185,-169,-186,-69,-77,-26,-72,-68,-167,-121,-124,-123,-126,-125,-122,-73,-25,-134,-192,-184,-193,-194,-195,-172,-47,-49,-45,-56,-54,-55,-57,-41,-67,-66,-65,-62,-63,-76,-60,-59,-52,-51,-43,-28,-91,12,-127,-120,-119,-128,-129,-183,-191,12,12,12,-79,-152,-136,-196,-156,-157,-154,12,-138,-197,-187,-155,-153,-130,-24,-137,-135,]),'KEYWORD_DO':([9,12,13,14,15,22,23,24,25,26,29,31,32,34,35,36,40,41,42,43,44,46,47,52,53,57,58,64,65,66,67,68,69,71,72,73,74,75,76,79,80,81,82,83,85,86,88,89,90,91,92,94,96,97,98,99,100,101,102,105,121,123,128,129,131,132,134,135,142,157,158,159,162,163,169,189,190,192,226,227,228,229,230,231,232,233,234,235,236,237,238,240,242,243,244,245,246,247,249,251,276,279,280,289,293,303,309,312,313,319,324,334,335,341,345,348,],[-133,40,-5,-168,-188,-146,-139,-140,-27,-131,-132,-17,-11,-148,-142,-14,40,40,-144,-13,-143,-166,-16,-147,-15,-145,-141,-64,-89,-44,-88,-84,-70,-46,-86,-71,-77,-42,-80,-50,-83,-74,-85,-22,-23,-18,-87,-21,-61,-78,-58,-81,-53,-48,-82,-75,-26,-40,-90,-8,-149,-12,-202,-105,-189,-106,-104,-201,-102,-69,-77,-26,-72,-68,-167,-73,-25,-134,-47,-49,-45,-56,-54,-55,-57,-41,-67,-66,-65,-62,-63,-76,-60,-59,-52,-51,-43,-28,-91,40,40,40,40,-79,-152,-136,-156,-157,-154,40,-138,-155,-153,-24,-137,-135,]),'ASOP':([9,25,26,29,30,33,74,100,136,138,175,176,177,178,180,181,192,200,202,208,209,210,212,213,223,247,253,259,260,261,263,264,267,271,294,297,305,316,328,339,],[-133,-27,-131,-132,109,-26,109,-26,-203,-203,-121,-124,-123,-126,-125,-122,-134,-203,-111,268,-184,-193,-194,-195,284,-28,295,-127,-120,-119,-128,-129,-183,284,-110,321,-196,-118,-197,-130,]),'NOT':([9,26,27,29,50,70,77,78,93,103,106,107,108,109,110,111,112,113,114,115,116,117,118,120,124,136,137,138,141,156,160,161,164,165,166,167,168,170,171,172,173,174,175,176,177,178,180,181,183,184,185,186,187,188,192,206,208,209,210,212,213,239,248,250,258,259,260,261,263,264,267,268,273,278,284,290,295,305,325,328,329,330,331,333,336,339,347,],[-133,-131,103,-132,103,103,103,103,103,103,-30,-36,-34,-29,-32,-38,-35,-37,-31,103,-33,-39,103,103,103,-203,-190,-203,103,103,103,103,103,103,103,103,103,103,103,103,103,103,-121,-124,-123,-126,-125,-122,103,103,103,103,103,103,-134,103,-192,-184,-193,-194,-195,103,103,103,103,-127,-120,-119,-128,-129,-183,-191,103,103,103,103,103,-196,103,-197,103,-163,-162,103,103,-130,103,]),'COMMA':([9,25,26,29,64,65,66,67,68,69,71,72,73,74,75,76,79,80,81,82,83,85,86,88,89,90,91,92,94,96,97,98,99,100,101,102,129,132,134,150,151,157,158,159,162,163,175,176,177,178,180,181,189,190,192,193,196,200,202,209,223,226,227,228,229,230,231,232,233,234,235,236,237,238,240,242,243,244,245,246,247,249,254,255,256,259,260,261,263,264,267,269,270,271,282,285,286,289,291,294,296,303,306,307,314,315,316,322,324,327,339,341,342,343,345,348,349,],[-133,-27,-131,-132,-64,-89,-44,-88,-84,-70,-46,-86,-71,-77,-42,-80,-50,-83,-74,-85,-22,-23,-18,-87,-21,-61,-78,-58,-81,-53,-48,-82,-75,-26,-40,-90,-105,-106,-104,-175,222,-69,-77,-26,-72,-68,-121,-124,-123,-126,-125,-122,-73,-25,-134,248,-94,252,-111,-184,-203,-47,-49,-45,-56,-54,-55,-57,-41,-67,-66,-65,-62,-63,-76,-60,-59,-52,-51,-43,-28,-91,-113,-203,298,-127,-120,-119,-128,-129,-183,-198,304,-203,-176,-177,-117,-79,-95,-110,-115,-136,-200,304,298,-116,-118,-114,-138,-199,-130,-24,-107,347,-137,-135,-108,]),'REMAINDER':([9,25,26,29,64,65,67,68,69,72,73,74,76,80,81,82,88,90,91,94,98,99,100,102,157,158,159,162,163,189,192,234,235,236,237,238,240,247,249,289,],[-133,-27,-131,-132,-64,-89,-88,-84,-70,-86,-71,-77,-80,-83,-74,-85,-87,170,-78,-81,-82,-75,-26,-90,-69,-77,-26,-72,-68,-73,-134,-67,-66,-65,170,170,-76,-28,-91,-79,]),'OR':([9,25,26,29,64,65,66,67,68,69,71,72,73,74,75,76,79,80,81,82,83,88,90,91,92,94,96,97,98,99,100,101,102,157,158,159,162,163,189,192,226,227,228,229,230,231,232,233,234,235,236,237,238,240,242,243,244,245,246,247,249,289,],[-133,-27,-131,-132,-64,-89,-44,-88,-84,-70,-46,-86,-71,-77,-42,-80,-50,-83,-74,-85,168,-87,-61,-78,-58,-81,-53,-48,-82,-75,-26,-40,-90,-69,-77,-26,-72,-68,-73,-134,-47,-49,-45,-56,-54,-55,-57,-41,-67,-66,-65,-62,-63,-76,-60,-59,-52,-51,-43,-28,-91,-79,]),'CHOOSE':([217,],[278,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression_statement':([12,40,41,251,276,279,280,319,],[22,22,22,22,22,22,22,22,]),'variable_declaration_initializer':([50,284,295,336,347,],[128,315,320,342,349,]),'array_access':([12,27,40,41,50,70,77,78,93,103,115,118,120,124,141,156,160,161,164,165,166,167,168,170,171,172,173,174,183,184,185,186,187,188,206,239,248,250,251,258,273,276,278,279,280,284,290,295,319,325,329,333,336,347,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'block_statements_opt':([12,],[28,]),'inclusive_or_expression':([27,50,93,115,118,120,124,141,168,183,188,206,248,250,258,273,278,284,290,295,325,329,333,336,347,],[75,75,75,75,75,75,75,75,75,75,246,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'while_statement':([12,40,41,251,276,279,280,319,],[35,35,35,35,35,35,35,35,]),'expr_opt':([223,271,],[285,306,]),'equality_expression':([27,50,93,115,118,120,124,141,156,160,161,168,183,188,206,248,250,258,273,278,284,290,295,325,329,333,336,347,],[97,97,97,97,97,97,97,97,97,227,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'statement_expression':([12,40,41,251,276,279,280,319,],[37,37,37,37,37,37,37,37,]),'fun_param_clause':([138,],[212,]),'variable_list':([201,281,],[256,314,]),'for_statement':([12,40,41,251,276,279,280,319,],[42,42,42,42,42,42,42,42,]),'local_variable_declaration_statement':([12,41,],[43,43,]),'ProgramStructure':([0,],[2,]),'class_template_opt':([61,],[145,]),'fun_param':([211,272,304,],[269,269,327,]),'SingletonObject':([0,2,12,41,],[6,6,47,47,]),'class_initializer':([50,284,295,336,347,],[132,132,132,132,132,]),'array_data_type':([205,207,257,287,302,],[263,263,263,263,263,]),'int_float':([27,50,70,77,78,93,103,115,118,120,124,141,156,160,161,164,165,166,167,168,170,171,172,173,174,183,184,185,186,187,188,206,239,248,250,258,273,278,284,290,295,325,329,333,336,347,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'name':([12,27,40,41,50,70,77,78,93,103,115,118,120,124,130,141,156,160,161,164,165,166,167,168,170,171,172,173,174,183,184,185,186,187,188,205,206,207,239,248,250,251,257,258,273,276,278,279,280,284,287,290,295,302,319,325,329,333,336,347,],[33,100,33,33,100,159,159,159,100,159,100,100,100,100,204,100,159,159,159,159,159,159,159,159,159,159,159,159,159,100,159,159,159,159,159,264,100,264,159,100,100,33,264,100,100,33,100,33,33,100,264,100,100,264,33,100,100,100,100,100,]),'class_params':([62,],[151,]),'argument_list_opt':([120,206,258,325,],[195,266,300,338,]),'variable_declarator_id':([152,211,272,304,],[223,271,271,271,]),'for_step_opts':([214,],[274,]),'conditional_and_expression':([27,50,93,115,118,120,124,141,168,183,206,248,250,258,273,278,284,290,295,325,329,333,336,347,],[101,101,101,101,101,101,101,101,233,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'unary_expression':([27,50,70,77,78,93,103,115,118,120,124,141,156,160,161,164,165,166,167,168,170,171,172,173,174,183,184,185,186,187,188,206,239,248,250,258,273,278,284,290,295,325,329,333,336,347,],[64,64,157,162,163,64,189,64,64,64,64,64,64,64,64,64,64,64,64,64,234,235,236,64,64,64,64,64,64,64,64,64,289,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'ObjectDeclare':([0,2,12,41,],[3,3,3,3,]),'unary_expression_not_plus_minus':([27,50,70,77,78,93,103,115,118,120,124,141,156,160,161,164,165,166,167,168,170,171,172,173,174,183,184,185,186,187,188,206,239,248,250,258,273,278,284,290,295,325,329,333,336,347,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'c_literal':([27,50,70,77,78,93,103,115,118,120,124,141,156,160,161,164,165,166,167,168,170,171,172,173,174,183,184,185,186,187,188,206,239,248,250,258,273,278,284,290,295,325,329,333,336,347,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'valid_variable':([12,27,40,41,50,70,77,78,93,103,115,118,120,124,141,156,160,161,164,165,166,167,168,170,171,172,173,174,183,184,185,186,187,188,206,239,248,250,251,258,273,276,278,279,280,284,290,295,319,325,329,333,336,347,],[30,74,30,30,74,158,158,158,74,158,74,74,74,74,74,158,158,158,158,158,158,158,158,158,158,158,158,158,74,158,158,158,158,158,74,158,74,74,30,74,74,30,74,30,30,74,74,74,30,74,74,74,74,74,]),'reference_type':([205,207,257,287,302,],[260,260,260,260,260,]),'argument_list':([120,206,258,325,],[193,193,193,193,]),'conditional_or_expression':([27,50,93,115,118,120,124,141,183,206,248,250,258,273,278,284,290,295,325,329,333,336,347,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'variable_declaration_body':([126,],[199,]),'class_param_clause':([20,],[60,]),'do_while_statement':([12,40,41,251,276,279,280,319,],[44,44,44,44,44,44,44,44,]),'multiplicative_expression':([27,50,93,115,118,120,124,141,156,160,161,164,165,166,167,168,173,174,183,184,185,186,187,188,206,248,250,258,273,278,284,290,295,325,329,333,336,347,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,237,238,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'class_template':([61,],[144,]),'for_update':([139,140,277,],[216,216,216,]),'shift_expression':([27,50,93,115,118,120,124,141,156,160,161,164,165,166,167,168,183,186,187,188,206,248,250,258,273,278,284,290,295,325,329,333,336,347,],[96,96,96,96,96,96,96,96,96,96,96,229,230,231,232,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'variable_literal':([27,50,70,77,78,93,103,115,118,120,124,141,156,160,161,164,165,166,167,168,170,171,172,173,174,183,184,185,186,187,188,206,239,248,250,258,273,278,284,290,295,325,329,333,336,347,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'class_param_clause_opt':([20,],[61,]),'fun_def':([51,],[137,]),'class_and_objects':([0,2,],[5,11,]),'assignment_operator':([30,74,],[115,115,]),'type_opt':([136,200,255,],[208,253,296,]),'expression':([27,50,93,118,120,124,141,183,206,248,250,258,273,278,284,290,295,325,329,333,336,347,],[104,134,182,191,196,198,219,241,196,291,292,196,308,311,134,317,134,196,340,341,134,134,]),'block':([3,7,12,40,41,50,251,276,279,280,319,],[13,15,57,57,57,135,57,57,57,57,57,]),'if_then_else_statement':([12,40,41,251,276,279,280,319,],[58,58,58,58,58,58,58,58,]),'exclusive_or_expression':([27,50,93,115,118,120,124,141,161,168,183,188,206,248,250,258,273,278,284,290,295,325,329,333,336,347,],[66,66,66,66,66,66,66,66,228,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'primary':([27,50,70,77,78,93,103,115,118,120,124,141,156,160,161,164,165,166,167,168,170,171,172,173,174,183,184,185,186,187,188,206,239,248,250,258,273,278,284,290,295,325,329,333,336,347,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'if_then_statement':([12,40,41,251,276,279,280,319,],[24,24,24,24,24,24,24,24,]),'additive_expression':([27,50,93,115,118,120,124,141,156,160,161,164,165,166,167,168,183,184,185,186,187,188,206,248,250,258,273,278,284,290,295,325,329,333,336,347,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,242,243,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'simple_name':([1,12,27,40,41,50,51,70,77,78,93,103,115,118,119,120,124,130,141,146,156,160,161,164,165,166,167,168,170,171,172,173,174,183,184,185,186,187,188,205,206,207,239,248,250,251,257,258,273,276,278,279,280,284,287,290,295,302,319,325,329,333,336,347,],[10,26,26,26,26,26,138,26,26,26,26,26,26,26,192,26,26,26,26,220,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'method_declaration':([12,41,],[31,31,]),'fun_param_clause_opt':([138,],[210,]),'block_statement':([12,41,],[32,123,]),'primitive_type':([93,205,207,257,287,302,],[179,261,261,261,261,261,]),'literal':([27,50,70,77,78,93,103,115,118,120,124,141,156,160,161,164,165,166,167,168,170,171,172,173,174,183,184,185,186,187,188,206,239,248,250,258,273,278,284,290,295,325,329,333,336,347,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'relational_expression':([27,50,93,115,118,120,124,141,156,160,161,168,183,186,187,188,206,248,250,258,273,278,284,290,295,325,329,333,336,347,],[79,79,79,79,79,79,79,79,79,79,79,79,79,244,245,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'statement':([12,40,41,251,276,279,280,319,],[36,122,36,293,309,312,313,335,]),'method_invocation':([12,27,40,41,50,70,77,78,93,103,115,118,120,124,141,156,160,161,164,165,166,167,168,170,171,172,173,174,183,184,185,186,187,188,206,239,248,250,251,258,273,276,278,279,280,284,290,295,319,325,329,333,336,347,],[38,94,38,38,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,38,94,94,38,94,38,38,94,94,94,38,94,94,94,94,94,]),'type':([205,207,257,287,302,],[262,267,299,316,326,]),'empty':([10,12,20,27,41,61,62,120,136,138,154,200,206,214,222,223,255,258,271,325,],[21,39,63,84,21,147,155,194,209,213,21,209,194,275,283,286,209,194,286,194,]),'variable_argument_list':([336,],[343,]),'declaration_keyword':([49,225,],[126,288,]),'qualified_name':([12,27,40,41,50,70,77,78,93,103,115,118,120,124,130,141,156,160,161,164,165,166,167,168,170,171,172,173,174,183,184,185,186,187,188,205,206,207,239,248,250,251,257,258,273,276,278,279,280,284,287,290,295,302,319,325,329,333,336,347,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'class_body':([7,],[14,]),'override':([62,222,],[153,153,]),'cast_expression':([27,50,70,77,78,93,103,115,118,120,124,141,156,160,161,164,165,166,167,168,170,171,172,173,174,183,184,185,186,187,188,206,239,248,250,258,273,278,284,290,295,325,329,333,336,347,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'override_opt':([62,222,],[154,154,]),'class_header':([0,2,12,41,],[7,7,7,7,]),'class_declaration_keyword_opt':([62,222,],[152,152,]),'method_header':([12,41,],[50,50,]),'empty_statement':([12,40,41,251,276,279,280,319,],[52,52,52,52,52,52,52,52,]),'variable_dec':([201,281,298,],[254,254,322,]),'local_variable_declaration':([12,41,],[56,56,]),'modifier':([10,12,41,154,],[19,19,19,19,]),'for_untilTo':([311,],[329,]),'normal_statement':([12,40,41,251,276,279,280,319,],[23,23,23,23,23,23,23,23,]),'class_param':([62,222,],[150,282,]),'class_data_type':([205,207,257,287,302,],[259,259,259,259,259,]),'and_expression':([27,50,93,115,118,120,124,141,156,161,168,183,188,206,248,250,258,273,278,284,290,295,325,329,333,336,347,],[71,71,71,71,71,71,71,71,226,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'base_variable_set':([27,50,70,77,78,93,103,115,118,120,124,141,156,160,161,164,165,166,167,168,170,171,172,173,174,183,184,185,186,187,188,206,239,248,250,258,273,278,284,290,295,325,329,333,336,347,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'return_statement':([12,40,41,251,276,279,280,319,],[34,34,34,34,34,34,34,34,]),'for_loop':([139,140,277,],[214,214,214,]),'block_statements':([12,],[41,]),'if_else_expression':([27,50,93,115,118,120,124,141,183,206,248,250,258,273,278,284,290,295,325,329,333,336,347,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'assignment_expression':([27,50,93,115,118,120,124,141,183,206,248,250,258,273,278,284,290,295,325,329,333,336,347,],[86,86,86,190,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'expression_optional':([27,],[87,]),'class_params_opt':([62,],[149,]),'assignment':([12,27,40,41,50,93,115,118,120,124,141,183,206,248,250,251,258,273,276,278,279,280,284,290,295,319,325,329,333,336,347,],[45,89,45,45,89,89,89,89,89,89,89,89,89,89,89,45,89,89,45,89,45,45,89,89,89,45,89,89,89,89,89,]),'for_logic':([139,140,277,],[215,218,310,]),'method_body':([50,],[131,]),'fun_params':([211,272,],[270,307,]),'modifier_opts':([10,12,41,154,],[20,49,49,225,]),'array_initializer':([50,284,295,336,347,],[129,129,129,129,129,]),'fun_sig':([51,],[136,]),'identifiers':([126,],[200,]),'class_declaration':([0,2,12,41,],[4,4,53,53,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> ProgramStructure","S'",1,None,None,None),
  ('ProgramStructure -> ProgramStructure class_and_objects','ProgramStructure',2,'p_program_structure','GRAMMAR.py',15),
  ('ProgramStructure -> class_and_objects','ProgramStructure',1,'p_program_structure','GRAMMAR.py',16),
  ('class_and_objects -> SingletonObject','class_and_objects',1,'p_class_and_objects','GRAMMAR.py',23),
  ('class_and_objects -> class_declaration','class_and_objects',1,'p_class_and_objects','GRAMMAR.py',24),
  ('SingletonObject -> ObjectDeclare block','SingletonObject',2,'p_SingletonObject','GRAMMAR.py',28),
  ('ObjectDeclare -> KEYWORD_OBJECT IDENTIFIER','ObjectDeclare',2,'p_object_declare','GRAMMAR.py',32),
  ('ObjectDeclare -> KEYWORD_OBJECT IDENTIFIER KEYWORD_EXTENDS IDENTIFIER','ObjectDeclare',4,'p_object_declare','GRAMMAR.py',33),
  ('block -> BLOCKBEGIN block_statements_opt BLOCKEND','block',3,'p_block','GRAMMAR.py',47),
  ('block_statements_opt -> block_statements','block_statements_opt',1,'p_block_statements_opt','GRAMMAR.py',53),
  ('block_statements_opt -> empty','block_statements_opt',1,'p_block_statements_opt','GRAMMAR.py',54),
  ('block_statements -> block_statement','block_statements',1,'p_block_statements','GRAMMAR.py',58),
  ('block_statements -> block_statements block_statement','block_statements',2,'p_block_statements','GRAMMAR.py',59),
  ('block_statement -> local_variable_declaration_statement','block_statement',1,'p_block_statement','GRAMMAR.py',66),
  ('block_statement -> statement','block_statement',1,'p_block_statement','GRAMMAR.py',67),
  ('block_statement -> class_declaration','block_statement',1,'p_block_statement','GRAMMAR.py',68),
  ('block_statement -> SingletonObject','block_statement',1,'p_block_statement','GRAMMAR.py',69),
  ('block_statement -> method_declaration','block_statement',1,'p_block_statement','GRAMMAR.py',70),
  ('expression -> assignment_expression','expression',1,'p_expression','GRAMMAR.py',75),
  ('expression_optional -> expression','expression_optional',1,'p_expression_optional','GRAMMAR.py',79),
  ('expression_optional -> empty','expression_optional',1,'p_expression_optional','GRAMMAR.py',80),
  ('assignment_expression -> assignment','assignment_expression',1,'p_assignment_expression','GRAMMAR.py',84),
  ('assignment_expression -> conditional_or_expression','assignment_expression',1,'p_assignment_expression','GRAMMAR.py',85),
  ('assignment_expression -> if_else_expression','assignment_expression',1,'p_assignment_expression','GRAMMAR.py',86),
  ('if_else_expression -> KEYWORD_IF LPAREN expression RPAREN expression KEYWORD_ELSE expression','if_else_expression',7,'p_if_else_expression','GRAMMAR.py',90),
  ('assignment -> valid_variable assignment_operator assignment_expression','assignment',3,'p_assignment','GRAMMAR.py',99),
  ('valid_variable -> name','valid_variable',1,'p_valid_variable','GRAMMAR.py',103),
  ('valid_variable -> array_access','valid_variable',1,'p_valid_variable','GRAMMAR.py',104),
  ('array_access -> name LBRAC expression RBRAC','array_access',4,'p_array_access','GRAMMAR.py',108),
  ('assignment_operator -> ASOP','assignment_operator',1,'p_assignment_operator','GRAMMAR.py',114),
  ('assignment_operator -> TIMES_ASSIGN','assignment_operator',1,'p_assignment_operator','GRAMMAR.py',115),
  ('assignment_operator -> DIVIDE_ASSIGN','assignment_operator',1,'p_assignment_operator','GRAMMAR.py',116),
  ('assignment_operator -> REMAINDER_ASSIGN','assignment_operator',1,'p_assignment_operator','GRAMMAR.py',117),
  ('assignment_operator -> PLUS_ASSIGN','assignment_operator',1,'p_assignment_operator','GRAMMAR.py',118),
  ('assignment_operator -> MINUS_ASSIGN','assignment_operator',1,'p_assignment_operator','GRAMMAR.py',119),
  ('assignment_operator -> LSHIFT_ASSIGN','assignment_operator',1,'p_assignment_operator','GRAMMAR.py',120),
  ('assignment_operator -> RSHIFT_ASSIGN','assignment_operator',1,'p_assignment_operator','GRAMMAR.py',121),
  ('assignment_operator -> AND_ASSIGN','assignment_operator',1,'p_assignment_operator','GRAMMAR.py',122),
  ('assignment_operator -> OR_ASSIGN','assignment_operator',1,'p_assignment_operator','GRAMMAR.py',123),
  ('assignment_operator -> XOR_ASSIGN','assignment_operator',1,'p_assignment_operator','GRAMMAR.py',124),
  ('conditional_or_expression -> conditional_and_expression','conditional_or_expression',1,'p_conditional_or_expression','GRAMMAR.py',133),
  ('conditional_or_expression -> conditional_or_expression OR conditional_and_expression','conditional_or_expression',3,'p_conditional_or_expression','GRAMMAR.py',134),
  ('conditional_and_expression -> inclusive_or_expression','conditional_and_expression',1,'p_conditional_and_expression','GRAMMAR.py',145),
  ('conditional_and_expression -> conditional_and_expression AND inclusive_or_expression','conditional_and_expression',3,'p_conditional_and_expression','GRAMMAR.py',146),
  ('inclusive_or_expression -> exclusive_or_expression','inclusive_or_expression',1,'p_inclusive_or_expression','GRAMMAR.py',154),
  ('inclusive_or_expression -> inclusive_or_expression OR_BITWISE exclusive_or_expression','inclusive_or_expression',3,'p_inclusive_or_expression','GRAMMAR.py',155),
  ('exclusive_or_expression -> and_expression','exclusive_or_expression',1,'p_exclusive_or_expression','GRAMMAR.py',163),
  ('exclusive_or_expression -> exclusive_or_expression XOR and_expression','exclusive_or_expression',3,'p_exclusive_or_expression','GRAMMAR.py',164),
  ('and_expression -> equality_expression','and_expression',1,'p_and_expression','GRAMMAR.py',172),
  ('and_expression -> and_expression AND_BITWISE equality_expression','and_expression',3,'p_and_expression','GRAMMAR.py',173),
  ('equality_expression -> relational_expression','equality_expression',1,'p_equality_expression','GRAMMAR.py',181),
  ('equality_expression -> equality_expression EQUAL relational_expression','equality_expression',3,'p_equality_expression','GRAMMAR.py',182),
  ('equality_expression -> equality_expression NEQUAL relational_expression','equality_expression',3,'p_equality_expression','GRAMMAR.py',183),
  ('relational_expression -> shift_expression','relational_expression',1,'p_relational_expression','GRAMMAR.py',192),
  ('relational_expression -> relational_expression GREATER shift_expression','relational_expression',3,'p_relational_expression','GRAMMAR.py',193),
  ('relational_expression -> relational_expression LESS shift_expression','relational_expression',3,'p_relational_expression','GRAMMAR.py',194),
  ('relational_expression -> relational_expression GEQ shift_expression','relational_expression',3,'p_relational_expression','GRAMMAR.py',195),
  ('relational_expression -> relational_expression LEQ shift_expression','relational_expression',3,'p_relational_expression','GRAMMAR.py',196),
  ('shift_expression -> additive_expression','shift_expression',1,'p_shift_expression','GRAMMAR.py',205),
  ('shift_expression -> shift_expression LSHIFT additive_expression','shift_expression',3,'p_shift_expression','GRAMMAR.py',206),
  ('shift_expression -> shift_expression RSHIFT additive_expression','shift_expression',3,'p_shift_expression','GRAMMAR.py',207),
  ('additive_expression -> multiplicative_expression','additive_expression',1,'p_additive_expression','GRAMMAR.py',216),
  ('additive_expression -> additive_expression PLUS multiplicative_expression','additive_expression',3,'p_additive_expression','GRAMMAR.py',217),
  ('additive_expression -> additive_expression MINUS multiplicative_expression','additive_expression',3,'p_additive_expression','GRAMMAR.py',218),
  ('multiplicative_expression -> unary_expression','multiplicative_expression',1,'p_multiplicative_expression','GRAMMAR.py',226),
  ('multiplicative_expression -> multiplicative_expression TIMES unary_expression','multiplicative_expression',3,'p_multiplicative_expression','GRAMMAR.py',227),
  ('multiplicative_expression -> multiplicative_expression DIVIDE unary_expression','multiplicative_expression',3,'p_multiplicative_expression','GRAMMAR.py',228),
  ('multiplicative_expression -> multiplicative_expression REMAINDER unary_expression','multiplicative_expression',3,'p_multiplicative_expression','GRAMMAR.py',229),
  ('unary_expression -> PLUS unary_expression','unary_expression',2,'p_unary_expression','GRAMMAR.py',237),
  ('unary_expression -> MINUS unary_expression','unary_expression',2,'p_unary_expression','GRAMMAR.py',238),
  ('unary_expression -> unary_expression_not_plus_minus','unary_expression',1,'p_unary_expression','GRAMMAR.py',239),
  ('unary_expression_not_plus_minus -> base_variable_set','unary_expression_not_plus_minus',1,'p_unary_expression_not_plus_minus','GRAMMAR.py',247),
  ('unary_expression_not_plus_minus -> TILDA unary_expression','unary_expression_not_plus_minus',2,'p_unary_expression_not_plus_minus','GRAMMAR.py',248),
  ('unary_expression_not_plus_minus -> NOT unary_expression','unary_expression_not_plus_minus',2,'p_unary_expression_not_plus_minus','GRAMMAR.py',249),
  ('unary_expression_not_plus_minus -> cast_expression','unary_expression_not_plus_minus',1,'p_unary_expression_not_plus_minus','GRAMMAR.py',250),
  ('base_variable_set -> variable_literal','base_variable_set',1,'p_base_variable_set','GRAMMAR.py',259),
  ('base_variable_set -> LPAREN expression RPAREN','base_variable_set',3,'p_base_variable_set','GRAMMAR.py',260),
  ('variable_literal -> valid_variable','variable_literal',1,'p_variableliteral','GRAMMAR.py',269),
  ('variable_literal -> primary','variable_literal',1,'p_variableliteral','GRAMMAR.py',270),
  ('cast_expression -> LPAREN primitive_type RPAREN unary_expression','cast_expression',4,'p_cast_expression','GRAMMAR.py',275),
  ('primary -> literal','primary',1,'p_primary','GRAMMAR.py',281),
  ('primary -> method_invocation','primary',1,'p_primary','GRAMMAR.py',282),
  ('literal -> int_float','literal',1,'p_literal','GRAMMAR.py',286),
  ('literal -> c_literal','literal',1,'p_literal','GRAMMAR.py',287),
  ('c_literal -> CHAR','c_literal',1,'p_c_literal','GRAMMAR.py',291),
  ('c_literal -> STRING','c_literal',1,'p_c_literal','GRAMMAR.py',292),
  ('c_literal -> BOOL_CONSTT','c_literal',1,'p_c_literal','GRAMMAR.py',293),
  ('c_literal -> BOOL_CONSTF','c_literal',1,'p_c_literal','GRAMMAR.py',294),
  ('c_literal -> KEYWORD_NULL','c_literal',1,'p_c_literal','GRAMMAR.py',295),
  ('int_float -> DOUBLE_NUMBER','int_float',1,'p_int_float','GRAMMAR.py',300),
  ('int_float -> INT_NUMBER','int_float',1,'p_int_float','GRAMMAR.py',301),
  ('method_invocation -> name LPAREN argument_list_opt RPAREN','method_invocation',4,'p_method_invocation','GRAMMAR.py',308),
  ('argument_list_opt -> argument_list','argument_list_opt',1,'p_argument_list_opt','GRAMMAR.py',314),
  ('argument_list_opt -> empty','argument_list_opt',1,'p_argument_list_opt2','GRAMMAR.py',318),
  ('argument_list -> expression','argument_list',1,'p_argument_list','GRAMMAR.py',322),
  ('argument_list -> argument_list COMMA expression','argument_list',3,'p_argument_list','GRAMMAR.py',323),
  ('modifier -> KEYWORD_PROTECTED','modifier',1,'p_modifier','GRAMMAR.py',334),
  ('modifier -> KEYWORD_PRIVATE','modifier',1,'p_modifier','GRAMMAR.py',335),
  ('modifier_opts -> modifier','modifier_opts',1,'p_modifier_opts','GRAMMAR.py',340),
  ('modifier_opts -> empty','modifier_opts',1,'p_modifier_opts','GRAMMAR.py',341),
  ('declaration_keyword -> KEYWORD_VAR','declaration_keyword',1,'p_declaration_keyword','GRAMMAR.py',345),
  ('declaration_keyword -> KEYWORD_VAL','declaration_keyword',1,'p_declaration_keyword','GRAMMAR.py',346),
  ('local_variable_declaration_statement -> local_variable_declaration TERMINATOR','local_variable_declaration_statement',2,'p_local_variable_declaration_statement','GRAMMAR.py',352),
  ('local_variable_declaration -> modifier_opts declaration_keyword variable_declaration_body','local_variable_declaration',3,'p_local_variable_declaration','GRAMMAR.py',357),
  ('variable_declaration_initializer -> expression','variable_declaration_initializer',1,'p_variable_declaration_initializer','GRAMMAR.py',361),
  ('variable_declaration_initializer -> array_initializer','variable_declaration_initializer',1,'p_variable_declaration_initializer','GRAMMAR.py',362),
  ('variable_declaration_initializer -> class_initializer','variable_declaration_initializer',1,'p_variable_declaration_initializer','GRAMMAR.py',363),
  ('variable_argument_list -> variable_declaration_initializer','variable_argument_list',1,'p_variable_argument_list','GRAMMAR.py',367),
  ('variable_argument_list -> variable_argument_list COMMA variable_declaration_initializer','variable_argument_list',3,'p_variable_argument_list','GRAMMAR.py',368),
  ('variable_declaration_body -> identifiers type_opt ASOP variable_declaration_initializer','variable_declaration_body',4,'p_variable_declaration_body_1','GRAMMAR.py',376),
  ('identifiers -> identifiers COMMA IDENTIFIER','identifiers',3,'p_identifiers','GRAMMAR.py',381),
  ('identifiers -> IDENTIFIER','identifiers',1,'p_identifiers','GRAMMAR.py',382),
  ('variable_declaration_body -> LPAREN variable_list RPAREN ASOP LPAREN variable_argument_list RPAREN','variable_declaration_body',7,'p_variable_declaration_body_2','GRAMMAR.py',394),
  ('variable_list -> variable_dec','variable_list',1,'p_variable_list','GRAMMAR.py',403),
  ('variable_list -> variable_list COMMA variable_dec','variable_list',3,'p_variable_list','GRAMMAR.py',404),
  ('variable_dec -> IDENTIFIER type_opt','variable_dec',2,'p_variable_dec','GRAMMAR.py',412),
  ('expr_opt -> ASOP variable_declaration_initializer','expr_opt',2,'p_expr_opt','GRAMMAR.py',427),
  ('expr_opt -> empty','expr_opt',1,'p_expr_opt','GRAMMAR.py',428),
  ('variable_declarator_id -> IDENTIFIER COLON type','variable_declarator_id',3,'p_variable_declarator_id','GRAMMAR.py',437),
  ('type -> primitive_type','type',1,'p_type','GRAMMAR.py',445),
  ('type -> reference_type','type',1,'p_type','GRAMMAR.py',446),
  ('primitive_type -> TYPE_INT','primitive_type',1,'p_primitive_type','GRAMMAR.py',450),
  ('primitive_type -> TYPE_DOUBLE','primitive_type',1,'p_primitive_type','GRAMMAR.py',451),
  ('primitive_type -> TYPE_CHAR','primitive_type',1,'p_primitive_type','GRAMMAR.py',452),
  ('primitive_type -> TYPE_STRING','primitive_type',1,'p_primitive_type','GRAMMAR.py',453),
  ('primitive_type -> TYPE_BOOLEAN','primitive_type',1,'p_primitive_type','GRAMMAR.py',454),
  ('primitive_type -> TYPE_VOID','primitive_type',1,'p_primitive_type','GRAMMAR.py',455),
  ('reference_type -> class_data_type','reference_type',1,'p_reference_type','GRAMMAR.py',461),
  ('reference_type -> array_data_type','reference_type',1,'p_reference_type','GRAMMAR.py',462),
  ('class_data_type -> name','class_data_type',1,'p_class_data_type','GRAMMAR.py',466),
  ('array_data_type -> KEYWORD_ARRAY LBRAC type RBRAC','array_data_type',4,'p_array_data_type','GRAMMAR.py',470),
  ('name -> simple_name','name',1,'p_name','GRAMMAR.py',479),
  ('name -> qualified_name','name',1,'p_name','GRAMMAR.py',480),
  ('simple_name -> IDENTIFIER','simple_name',1,'p_simple_name','GRAMMAR.py',485),
  ('qualified_name -> name INST simple_name','qualified_name',3,'p_qualified_name','GRAMMAR.py',491),
  ('array_initializer -> KEYWORD_NEW KEYWORD_ARRAY LBRAC type RBRAC LPAREN INT_NUMBER RPAREN','array_initializer',8,'p_array_initializer','GRAMMAR.py',498),
  ('array_initializer -> KEYWORD_ARRAY LPAREN argument_list_opt RPAREN','array_initializer',4,'p_array_initializer','GRAMMAR.py',499),
  ('array_initializer -> KEYWORD_ARRAY LBRAC type RBRAC LPAREN argument_list_opt RPAREN','array_initializer',7,'p_array_initializer','GRAMMAR.py',500),
  ('class_initializer -> KEYWORD_NEW name LPAREN argument_list_opt RPAREN','class_initializer',5,'p_class_initializer','GRAMMAR.py',528),
  ('statement -> normal_statement','statement',1,'p_statement','GRAMMAR.py',536),
  ('statement -> if_then_statement','statement',1,'p_statement','GRAMMAR.py',537),
  ('statement -> if_then_else_statement','statement',1,'p_statement','GRAMMAR.py',538),
  ('statement -> while_statement','statement',1,'p_statement','GRAMMAR.py',539),
  ('statement -> do_while_statement','statement',1,'p_statement','GRAMMAR.py',540),
  ('statement -> for_statement','statement',1,'p_statement','GRAMMAR.py',541),
  ('normal_statement -> block','normal_statement',1,'p_normal_statement','GRAMMAR.py',587),
  ('normal_statement -> expression_statement','normal_statement',1,'p_normal_statement','GRAMMAR.py',588),
  ('normal_statement -> empty_statement','normal_statement',1,'p_normal_statement','GRAMMAR.py',589),
  ('normal_statement -> return_statement','normal_statement',1,'p_normal_statement','GRAMMAR.py',590),
  ('expression_statement -> statement_expression TERMINATOR','expression_statement',2,'p_expression_statement','GRAMMAR.py',597),
  ('statement_expression -> assignment','statement_expression',1,'p_statement_expression','GRAMMAR.py',603),
  ('statement_expression -> method_invocation','statement_expression',1,'p_statement_expression','GRAMMAR.py',604),
  ('if_then_statement -> KEYWORD_IF LPAREN expression RPAREN statement','if_then_statement',5,'p_if_then_statement','GRAMMAR.py',611),
  ('if_then_else_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement','if_then_else_statement',7,'p_if_then_else_statement','GRAMMAR.py',618),
  ('while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement','while_statement',5,'p_while_statement','GRAMMAR.py',627),
  ('do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN TERMINATOR','do_while_statement',7,'p_do_while_statement','GRAMMAR.py',635),
  ('for_statement -> KEYWORD_FOR LPAREN for_logic RPAREN statement','for_statement',5,'p_for_statement1','GRAMMAR.py',645),
  ('for_statement -> KEYWORD_FOR BLOCKBEGIN for_logic BLOCKEND statement','for_statement',5,'p_for_statement2','GRAMMAR.py',652),
  ('for_logic -> for_update','for_logic',1,'p_for_logic','GRAMMAR.py',659),
  ('for_logic -> for_update TERMINATOR for_logic','for_logic',3,'p_for_logic','GRAMMAR.py',660),
  ('for_update -> for_loop for_step_opts','for_update',2,'p_for_update','GRAMMAR.py',668),
  ('for_loop -> IDENTIFIER CHOOSE expression for_untilTo expression','for_loop',5,'p_for_loop','GRAMMAR.py',672),
  ('for_untilTo -> KEYWORD_UNTIL','for_untilTo',1,'p_for_untilTo','GRAMMAR.py',679),
  ('for_untilTo -> KEYWORD_TO','for_untilTo',1,'p_for_untilTo','GRAMMAR.py',680),
  ('for_step_opts -> KEYWORD_BY expression','for_step_opts',2,'p_for_step_opts','GRAMMAR.py',687),
  ('for_step_opts -> empty','for_step_opts',1,'p_for_step_opts','GRAMMAR.py',688),
  ('empty_statement -> TERMINATOR','empty_statement',1,'p_empty_statement','GRAMMAR.py',697),
  ('return_statement -> KEYWORD_RETURN expression_optional TERMINATOR','return_statement',3,'p_return_statement','GRAMMAR.py',703),
  ('class_declaration -> class_header class_body','class_declaration',2,'p_class_declaration','GRAMMAR.py',712),
  ('class_header -> KEYWORD_CLASS simple_name modifier_opts class_param_clause_opt class_template_opt','class_header',5,'p_class_header','GRAMMAR.py',716),
  ('class_param_clause_opt -> class_param_clause','class_param_clause_opt',1,'p_class_param_clause_opt','GRAMMAR.py',721),
  ('class_param_clause_opt -> empty','class_param_clause_opt',1,'p_class_param_clause_opt','GRAMMAR.py',722),
  ('class_param_clause -> LPAREN class_params_opt RPAREN','class_param_clause',3,'p_class_param_clause','GRAMMAR.py',726),
  ('class_params_opt -> class_params','class_params_opt',1,'p_class_param_opt','GRAMMAR.py',732),
  ('class_params_opt -> empty','class_params_opt',1,'p_class_param_opt','GRAMMAR.py',733),
  ('class_params -> class_param','class_params',1,'p_class_params','GRAMMAR.py',737),
  ('class_params -> class_params COMMA class_param','class_params',3,'p_class_params','GRAMMAR.py',738),
  ('class_param -> class_declaration_keyword_opt variable_declarator_id expr_opt','class_param',3,'p_class_param','GRAMMAR.py',746),
  ('override_opt -> override','override_opt',1,'p_override_opt','GRAMMAR.py',750),
  ('override_opt -> empty','override_opt',1,'p_override_opt','GRAMMAR.py',751),
  ('override -> KEYWORD_OVERRIDE','override',1,'p_override','GRAMMAR.py',755),
  ('class_declaration_keyword_opt -> override_opt modifier_opts declaration_keyword','class_declaration_keyword_opt',3,'p_class_declaration_keyword_opt','GRAMMAR.py',760),
  ('class_declaration_keyword_opt -> empty','class_declaration_keyword_opt',1,'p_class_declaration_keyword_opt','GRAMMAR.py',761),
  ('type_opt -> COLON type','type_opt',2,'p_type_opt','GRAMMAR.py',768),
  ('type_opt -> empty','type_opt',1,'p_type_opt','GRAMMAR.py',769),
  ('class_template_opt -> class_template','class_template_opt',1,'p_class_template_opt','GRAMMAR.py',777),
  ('class_template_opt -> empty','class_template_opt',1,'p_class_template_opt','GRAMMAR.py',778),
  ('class_template -> KEYWORD_EXTENDS simple_name LPAREN variable_list RPAREN','class_template',5,'p_class_template','GRAMMAR.py',783),
  ('class_body -> block','class_body',1,'p_class_body','GRAMMAR.py',790),
  ('method_declaration -> method_header method_body','method_declaration',2,'p_method_declaration1','GRAMMAR.py',796),
  ('method_header -> KEYWORD_DEF fun_def','method_header',2,'p_method_header','GRAMMAR.py',805),
  ('fun_def -> fun_sig type_opt ASOP','fun_def',3,'p_fun_def1','GRAMMAR.py',810),
  ('fun_def -> fun_sig type_opt','fun_def',2,'p_fun_def2','GRAMMAR.py',815),
  ('fun_sig -> simple_name fun_param_clause_opt','fun_sig',2,'p_fun_sig','GRAMMAR.py',820),
  ('fun_param_clause_opt -> fun_param_clause','fun_param_clause_opt',1,'p_fun_param_clause_opt','GRAMMAR.py',824),
  ('fun_param_clause_opt -> empty','fun_param_clause_opt',1,'p_fun_param_clause_opt','GRAMMAR.py',825),
  ('fun_param_clause -> LPAREN fun_params RPAREN','fun_param_clause',3,'p_fun_param_clause','GRAMMAR.py',829),
  ('fun_param_clause -> fun_param_clause LPAREN fun_params RPAREN','fun_param_clause',4,'p_fun_param_clause','GRAMMAR.py',830),
  ('fun_params -> fun_param','fun_params',1,'p_fun_params','GRAMMAR.py',841),
  ('fun_params -> fun_params COMMA fun_param','fun_params',3,'p_fun_params','GRAMMAR.py',842),
  ('fun_param -> variable_declarator_id expr_opt','fun_param',2,'p_fun_param','GRAMMAR.py',850),
  ('method_body -> block','method_body',1,'p_method_body','GRAMMAR.py',854),
  ('method_body -> variable_declaration_initializer','method_body',1,'p_method_body','GRAMMAR.py',855),
  ('empty -> <empty>','empty',0,'p_empty','GRAMMAR.py',861),
]
